/* tslint:disable */
/* eslint-disable */
/**
 * CardScan API
 * The official documentation for the CardScan API.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


// May contain unused imports in some cases
// @ts-ignore
import { AdditionalInformation } from './additional-information';
// May contain unused imports in some cases
// @ts-ignore
import { BenefitsAdditionalInformation } from './benefits-additional-information';
// May contain unused imports in some cases
// @ts-ignore
import { BenefitsDateInformation } from './benefits-date-information';
// May contain unused imports in some cases
// @ts-ignore
import { BenefitsRelatedEntity } from './benefits-related-entity';
// May contain unused imports in some cases
// @ts-ignore
import { BenefitsServiceDelivery } from './benefits-service-delivery';
// May contain unused imports in some cases
// @ts-ignore
import { CompositeMedicalProcedureIdentifier } from './composite-medical-procedure-identifier';
// May contain unused imports in some cases
// @ts-ignore
import { EligibilityAdditionalInformation } from './eligibility-additional-information';

/**
 * BenefitsInformation
 * @export
 * @interface BenefitsInformation
 */
export interface BenefitsInformation {
    /**
     * Loop: 2110C and 2110D, Segments: EB, Element: EB01, Notes: Eligibility or Benefit Information Code
     * @type {string}
     * @memberof BenefitsInformation
     */
    'code'?: string;
    /**
     * Loop: 2110C and 2110D, Segments: EB, Element: EB01, Notes: Eligibility or Benefit Information Code
     * @type {string}
     * @memberof BenefitsInformation
     */
    'name'?: string;
    /**
     * Loop: 2110C and 2110D, Segments: EB, Element: EB02, Notes: Coverage Level Code
     * @type {string}
     * @memberof BenefitsInformation
     */
    'coverageLevelCode'?: string;
    /**
     * Loop: 2110C and 2110D, Segments: EB, Element: EB02, Notes: Coverage Level
     * @type {string}
     * @memberof BenefitsInformation
     */
    'coverageLevel'?: string;
    /**
     * Loop: 2110C and 2110D, Segments: EB, Element: EB03, Notes: Service Type Codes
     * @type {Array<string>}
     * @memberof BenefitsInformation
     */
    'serviceTypeCodes'?: Array<string>;
    /**
     * Loop: 2110C and 2110D, Segments: EB, Element: EB03, Notes: Service Types
     * @type {Array<string>}
     * @memberof BenefitsInformation
     */
    'serviceTypes'?: Array<string>;
    /**
     * Loop: 2110C and 2110D, Segments: EB, Element: EB04, Notes: Insurance Type Code
     * @type {string}
     * @memberof BenefitsInformation
     */
    'insuranceTypeCode'?: string;
    /**
     * Loop: 2110C and 2110D, Segments: EB, Element: EB04, Notes: Insurance Type
     * @type {string}
     * @memberof BenefitsInformation
     */
    'insuranceType'?: string;
    /**
     * Loop: 2110C and 2110D, Segments: EB, Element: EB05, Notes: Plan Coverage Description
     * @type {string}
     * @memberof BenefitsInformation
     */
    'planCoverage'?: string;
    /**
     * Loop: 2110C and 2110D, Segments: EB, Element: EB06, Notes: Time Period Qualifier Code
     * @type {string}
     * @memberof BenefitsInformation
     */
    'timeQualifierCode'?: string;
    /**
     * Loop: 2110C and 2110D, Segments: EB, Element: EB06, Notes: Time Period Qualifier
     * @type {string}
     * @memberof BenefitsInformation
     */
    'timeQualifier'?: string;
    /**
     * Loop: 2110C and 2110D, Segments: EB, Element: EB07, Notes: Monetary Amount
     * @type {string}
     * @memberof BenefitsInformation
     */
    'benefitAmount'?: string;
    /**
     * Loop: 2110C and 2110D, Segments: EB, Element: EB08, Notes: Percentage as Decimal
     * @type {string}
     * @memberof BenefitsInformation
     */
    'benefitPercent'?: string;
    /**
     * Loop: 2110C and 2110D, Segments: EB, Element: EB09, Notes: Quantity Qualifier Code
     * @type {string}
     * @memberof BenefitsInformation
     */
    'quantityQualifierCode'?: string;
    /**
     * Loop: 2110C and 2110D, Segments: EB, Element: EB09, Notes: Quantity Qualifier
     * @type {string}
     * @memberof BenefitsInformation
     */
    'quantityQualifier'?: string;
    /**
     * Loop: 2110C and 2110D, Segments: EB, Element: EB10, Notes: Quantity
     * @type {string}
     * @memberof BenefitsInformation
     */
    'benefitQuantity'?: string;
    /**
     * Loop: 2110C and 2110D, Segments: EB, Element: EB11, Notes: Yes/No Condition or Response Code
     * @type {string}
     * @memberof BenefitsInformation
     */
    'authOrCertIndicator'?: string;
    /**
     * Loop: 2110C and 2110D, Segments: EB, Element: EB12, Notes: Yes/No Condition or Response Code
     * @type {string}
     * @memberof BenefitsInformation
     */
    'inPlanNetworkIndicatorCode'?: string;
    /**
     * Loop: 2110C and 2110D, Segments: EB, Element: EB12, Notes: Yes/No Condition or Response
     * @type {string}
     * @memberof BenefitsInformation
     */
    'inPlanNetworkIndicator'?: string;
    /**
     * Loop: 2110C and 2110D, Segments: LS, Element: LS01, Notes: Loop Identifier Code
     * @type {string}
     * @memberof BenefitsInformation
     */
    'headerLoopIdentifierCode'?: string;
    /**
     * Loop: 2110C and 2110D, Segments: LE, Element: LE01, Notes: Loop Identifier Code
     * @type {string}
     * @memberof BenefitsInformation
     */
    'trailerLoopIdentifierCode'?: string;
    /**
     * 
     * @type {CompositeMedicalProcedureIdentifier}
     * @memberof BenefitsInformation
     */
    'compositeMedicalProcedureIdentifier'?: CompositeMedicalProcedureIdentifier;
    /**
     * 
     * @type {BenefitsAdditionalInformation}
     * @memberof BenefitsInformation
     */
    'benefitsAdditionalInformation'?: BenefitsAdditionalInformation;
    /**
     * 
     * @type {BenefitsDateInformation}
     * @memberof BenefitsInformation
     */
    'benefitsDateInformation'?: BenefitsDateInformation;
    /**
     * 
     * @type {BenefitsRelatedEntity}
     * @memberof BenefitsInformation
     */
    'benefitsRelatedEntity'?: BenefitsRelatedEntity;
    /**
     * Loop: 2120C and 2120D, Segments: NM1, N3, N4, PER, PRV, Notes: All occurrence of SUBSCRIBER/DEPENDENT BENEFIT RELATED ENTITY
     * @type {Array<BenefitsRelatedEntity>}
     * @memberof BenefitsInformation
     */
    'benefitsRelatedEntities'?: Array<BenefitsRelatedEntity>;
    /**
     * 
     * @type {Array<BenefitsServiceDelivery>}
     * @memberof BenefitsInformation
     */
    'benefitsServiceDelivery'?: Array<BenefitsServiceDelivery>;
    /**
     * 
     * @type {Array<AdditionalInformation>}
     * @memberof BenefitsInformation
     */
    'additionalInformation'?: Array<AdditionalInformation>;
    /**
     * 
     * @type {EligibilityAdditionalInformation}
     * @memberof BenefitsInformation
     */
    'eligibilityAdditionalInformation'?: EligibilityAdditionalInformation;
    /**
     * Loop: 2115C and 2115D, Segments: III Notes: all occurrences
     * @type {Array<EligibilityAdditionalInformation>}
     * @memberof BenefitsInformation
     */
    'eligibilityAdditionalInformationList'?: Array<EligibilityAdditionalInformation>;
}

