/* tslint:disable */
/* eslint-disable */
/**
 * CardScan API
 * The official documentation for the CardScan API.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


// May contain unused imports in some cases
// @ts-ignore
import { AdditionalIdentification } from './additional-identification';
// May contain unused imports in some cases
// @ts-ignore
import { Address } from './address';
// May contain unused imports in some cases
// @ts-ignore
import { HealthCareInformation } from './health-care-information';

/**
 * Loop: 2100C, Notes: Subscriber Detail
 * @export
 * @interface RequestSubscriber
 */
export interface RequestSubscriber {
    /**
     * Loop: 2100C Segment: INS, Element: INS17, Notes: Birth Sequence Number - must be exactly 9 positive unsigned numeric characters.
     * @type {string}
     * @memberof RequestSubscriber
     */
    'birthSequenceNumber'?: string;
    /**
     * Loop: 2100C Segment: REF, Element: REF02, Notes: REF01=3H Case Number
     * @type {string}
     * @memberof RequestSubscriber
     */
    'caseNumber'?: string;
    /**
     * Loop: 2110C Segment: REF, Element: REF02, Notes: REF01=NQ Medicaid Recipient Identification Number
     * @type {string}
     * @memberof RequestSubscriber
     */
    'medicaidRecipientIdentificationNumber'?: string;
    /**
     * Loop: 2110C Segment: ATM, Element: ATM02, Notes: ATM01=R Spend Down
     * @type {string}
     * @memberof RequestSubscriber
     */
    'spendDownAmount'?: string;
    /**
     * Loop: 2110C Segment: ATM, Element: ATM02, Notes: ATM01=PB Billed Amount
     * @type {string}
     * @memberof RequestSubscriber
     */
    'spendDownTotalBilledAmount'?: string;
    /**
     * Loop: 2110C Segment: EQ, Element: EQ03, Notes: Retired, Not Used
     * @type {string}
     * @memberof RequestSubscriber
     */
    'coverageLevelCode'?: string;
    /**
     * Loop: 2100C and 2100D, Segment: MN1, Element: NM109, Notes: NM108=MI, memberId 2-80 alphanumeric characters
     * @type {string}
     * @memberof RequestSubscriber
     */
    'memberId'?: string;
    /**
     * Loop: 2100C and 2100D, Segment: MN1, Element: NM104, Notes: firstName 1-35 alphanumeric characters
     * @type {string}
     * @memberof RequestSubscriber
     */
    'firstName'?: string;
    /**
     * Loop: 2100C and 2100D, Segment: MN1, Element: NM105, Notes: middleName 1-25 alphanumeric characters
     * @type {string}
     * @memberof RequestSubscriber
     */
    'middleName'?: string;
    /**
     * Loop: 2100C and 2100D, Segment: MN1, Element: NM103, Notes: lastName 1-60 alphanumeric characters
     * @type {string}
     * @memberof RequestSubscriber
     */
    'lastName'?: string;
    /**
     * Loop: 2100C and 2100D, Segment: MN1, Element: NM107, Notes: lastName 1-10 alphanumeric characters
     * @type {string}
     * @memberof RequestSubscriber
     */
    'suffix'?: string;
    /**
     * Loop: 2100C and 2100D, Segment: DMG, Element: DMG03, Notes: gender 1 character \'M\' or \'F\'
     * @type {string}
     * @memberof RequestSubscriber
     */
    'gender'?: RequestSubscriberGenderEnum;
    /**
     * Loop: 2100C and 2100D, Segment: DMG, Element: DMG02, Notes: date of birth in YYYYMMDD
     * @type {string}
     * @memberof RequestSubscriber
     */
    'dateOfBirth'?: string;
    /**
     * Loop: 2100C and 2100D, Segment: REF, Element: REF02, Notes: REF01=SY Social Security Number
     * @type {string}
     * @memberof RequestSubscriber
     */
    'ssn'?: string;
    /**
     * Loop: 2100C and 2100D, Segment: REF, Element: REF02, Notes: REF01=6P Group Number
     * @type {string}
     * @memberof RequestSubscriber
     */
    'groupNumber'?: string;
    /**
     * Loop: 2100C and 2100D, Segment: REF, Element: REF02, Notes: REF01=HJ Identity Card Number
     * @type {string}
     * @memberof RequestSubscriber
     */
    'idCard'?: string;
    /**
     * Loop: 2100C and 2100D, Segment: PRV, Element: PRV01, Notes: Allowed Values are: \'AD\' Admitting, \'AT\' Attending, \'BI\' Billing, \'CO\' Consulting, \'CV\' Covering, \'H\' Hospital, \'HH\' Home Health Care, \'LA\' Laboratory, \'OT\' Other Physician, \'P1\' Pharmacist, \'P2\' Pharmacy, \'PC\' Primary Care Physician, \'PE\' Performing, \'R\' Rural Health Clinic, \'RF\' Referring, \'SK\' Skilled Nursing Facility, \'SU\' Supervising
     * @type {string}
     * @memberof RequestSubscriber
     */
    'providerCode'?: RequestSubscriberProviderCodeEnum;
    /**
     * Loop: 2100C and 2100D, Segment: PRV, Element: PRV02, Notes: Allowed Values are: \'9K\' Servicer, \'D3\' National Council for Prescription Drug Programs Pharmacy Number, \'EI\' Employer\'s Identification Number, \'HPI\' Centers for Medicare and Medicaid Services National Provider Identifier, \'PXC\' Health Care Provider Taxonomy Code, \'SY\' Social Security Number, \'TJ\' Federal Taxpayer\'s Identification Number
     * @type {string}
     * @memberof RequestSubscriber
     */
    'referenceIdentificationQualifier'?: RequestSubscriberReferenceIdentificationQualifierEnum;
    /**
     * Loop: 2100C and 2100D, Segment: PRV, Element: PRV03, Notes: Provider Identifier
     * @type {string}
     * @memberof RequestSubscriber
     */
    'providerIdentifier'?: string;
    /**
     * Loop: 2110C and 2110D, Segment: DTP, Element: DTP03, Notes: DTP01=102, DTP02=RD8 Retired
     * @type {string}
     * @memberof RequestSubscriber
     */
    'beginningCardIssueDate'?: string;
    /**
     * Loop: 2110C and 2110D, Segment: DTP, Element: DTP03, Notes: DTP01=102, DTP02=RD8 Retired
     * @type {string}
     * @memberof RequestSubscriber
     */
    'endCardIssueDate'?: string;
    /**
     * Loop: 2110C and 2110D, Segment: DTP, Element: DTP03, Notes: DTP01=102, DTP02=D8 Retired
     * @type {string}
     * @memberof RequestSubscriber
     */
    'idCardIssueDate'?: string;
    /**
     * Loop: 2110C and 2110D, Segment: DTP, Element: DTP03, Notes: DTP01=291, DTP02=D8 Retired
     * @type {string}
     * @memberof RequestSubscriber
     */
    'planIssueDate'?: string;
    /**
     * Loop: 2110C and 2110D, Segment: DTP, Element: DTP03, Notes: DTP01=291, DTP02=RD8 Retired
     * @type {string}
     * @memberof RequestSubscriber
     */
    'beginningPlanIssueDate'?: string;
    /**
     * Loop: 2110C and 2110D, Segment: DTP, Element: DTP03, Notes: DTP01=291, DTP02=RD8 Retired
     * @type {string}
     * @memberof RequestSubscriber
     */
    'endPlanIssueDate'?: string;
    /**
     * Loop: 2100C and 2100D, Segment: HI, Element: HI01-1 HI01-2, Notes: Health Care Diagnosis
     * @type {Array<HealthCareInformation>}
     * @memberof RequestSubscriber
     */
    'healthCareCodeInformation'?: Array<HealthCareInformation>;
    /**
     * 
     * @type {Address}
     * @memberof RequestSubscriber
     */
    'address'?: Address;
    /**
     * 
     * @type {AdditionalIdentification}
     * @memberof RequestSubscriber
     */
    'additionalIdentification'?: AdditionalIdentification;
}

export const RequestSubscriberGenderEnum = {
    M: 'M',
    F: 'F'
} as const;

export type RequestSubscriberGenderEnum = typeof RequestSubscriberGenderEnum[keyof typeof RequestSubscriberGenderEnum];
export const RequestSubscriberProviderCodeEnum = {
    Ad: 'AD',
    At: 'AT',
    Bi: 'BI',
    Co: 'CO',
    Cv: 'CV',
    H: 'H',
    Hh: 'HH',
    La: 'LA',
    Ot: 'OT',
    P1: 'P1',
    P2: 'P2',
    Pc: 'PC',
    Pe: 'PE',
    R: 'R',
    Rf: 'RF',
    Sk: 'SK',
    Su: 'SU'
} as const;

export type RequestSubscriberProviderCodeEnum = typeof RequestSubscriberProviderCodeEnum[keyof typeof RequestSubscriberProviderCodeEnum];
export const RequestSubscriberReferenceIdentificationQualifierEnum = {
    _9K: '9K',
    D3: 'D3',
    Ei: 'EI',
    Hpi: 'HPI',
    Pxc: 'PXC',
    Sy: 'SY',
    Tj: 'TJ'
} as const;

export type RequestSubscriberReferenceIdentificationQualifierEnum = typeof RequestSubscriberReferenceIdentificationQualifierEnum[keyof typeof RequestSubscriberReferenceIdentificationQualifierEnum];


