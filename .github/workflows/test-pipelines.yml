name: Test pipelines

on:
  pull_request:
    branches: [main]

jobs:
  check_changes:
    runs-on: ubuntu-latest
    outputs:
      ts_changed: ${{ steps.filter.outputs.ts }}
      py_changed: ${{ steps.filter.outputs.py }}
      oas_changed: ${{ steps.filter.outputs.oas }}
      python_config_changed: ${{ steps.filter.outputs.python_config }}
      python_template_changed: ${{ steps.filter.outputs.python_template }}
      ts_config_changed: ${{ steps.filter.outputs.ts_config }}
      ts_template_changed: ${{ steps.filter.outputs.ts_template }}
    steps:
    - uses: actions/checkout@v2
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          ts:
            - 'clients/cardscan-ts/**/*.ts'
          py:
            - 'clients/cardscan-python/**/*.py'
          oas:
            - 'openapi.yaml'
          python_config:
            - 'openapi-generator-configs/python.config.json'
          python_template:
            - 'templates/python-template/*'
          ts_config:
            - 'openapi-generator-configs/ts.config.json'
          ts_template:
            - 'templates/typescript-template/*'
  test-ts:
    runs-on: ubuntu-latest
    needs: check_changes
    if: ${{ needs.check_changes.outputs.ts_changed == 'true' || needs.check_changes.outputs.oas_changed == 'true' || needs.check_changes.outputs.ts_config_changed == 'true' || needs.check_changes.outputs.ts_template_changed == 'true' }}
    steps:
    - uses: actions/checkout@v2
    - name: Generate Typescript Client
      if: ${{ needs.check_changes.outputs.oas_changed == 'true' || needs.check_changes.outputs.ts_config_changed == 'true' || needs.check_changes.outputs.ts_template_changed == 'true' }}
      uses: openapi-generators/openapitools-generator-action@v1
      with:
        generator: typescript-axios
        openapi-file: openapi.yaml
        config-file: openapi-generator-configs/ts.config.json
        template-dir: templates/typescript-template
        command-args: -o clients/cardscan-ts
        generator-tag: v7.7.0
    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 18.x
    - name: Install dependencies
      working-directory: clients/cardscan-ts
      run: npm ci
    - name: Set up environment variables file
      working-directory: clients/cardscan-ts
      run: echo "${{ secrets.TESTS_ENV_FILE }}" > .env
    - working-directory: clients/cardscan-ts
      run: npm run test

  test-python:
    runs-on: ubuntu-latest
    needs: check_changes
    if: ${{ needs.check_changes.outputs.py_changed == 'true' || needs.check_changes.outputs.oas_changed == 'true' || needs.check_changes.outputs.python_config_changed == 'true' || needs.check_changes.outputs.python_template_changed == 'true' }}
    steps:
    - uses: actions/checkout@v3
    - name: Generate Python Client
      if: ${{ needs.check_changes.outputs.oas_changed == 'true' || needs.check_changes.outputs.python_config_changed == 'true' || needs.check_changes.outputs.python_template_changed == 'true' }}
      uses: openapi-generators/openapitools-generator-action@v1
      with:
        generator: python-pydantic-v1
        openapi-file: openapi.yaml
        config-file: openapi-generator-configs/python.config.json
        template-dir: templates/python-template
        command-args: -o clients/cardscan-python
        generator-tag: v7.7.0
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.x
    - name: Install dependencies
      working-directory: clients/cardscan-python
      run: |
        python -m pip install --upgrade pip
        pip install pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        if [ -f test-requirements.txt ]; then pip install -r test-requirements.txt; fi
    - name: Set up environment variables file
      working-directory: clients/cardscan-python
      run: echo "${{ secrets.TESTS_ENV_FILE }}" > test/.env
    - name: Test with pytest
      working-directory: clients/cardscan-python
      run: pytest test/test_pipelines.py
