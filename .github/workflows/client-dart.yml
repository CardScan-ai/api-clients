name: Dart Client Pipeline

on:
  workflow_dispatch:
    inputs:
      skip_regeneration:
        description: 'Skip client regeneration'
        required: false
        default: false
        type: boolean
      skip_version_bump:
        description: 'Skip version bump and publishing'
        required: false
        default: false
        type: boolean
  push:
    branches: [main]
    paths:
      - 'openapi.yaml'
      - 'openapi-generator-configs/dart.config.json'
      - 'templates/dart-template/**'
      - 'clients/cardscan-dart/**'
  pull_request:
    branches: [main]
    paths:
      - 'openapi.yaml'
      - 'openapi-generator-configs/dart.config.json'
      - 'templates/dart-template/**'
      - 'clients/cardscan-dart/**'

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      should_regenerate: ${{ steps.check.outputs.should_regenerate }}
      should_version_bump: ${{ steps.check.outputs.should_version_bump }}
      is_merged_pr: ${{ steps.check.outputs.is_merged_pr }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - id: check
        run: |
          # Check if this is a manual dispatch with skip flags
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            if [[ "${{ github.event.inputs.skip_regeneration }}" == "true" ]]; then
              echo "should_regenerate=false" >> $GITHUB_OUTPUT
            else
              echo "should_regenerate=true" >> $GITHUB_OUTPUT
            fi
            
            if [[ "${{ github.event.inputs.skip_version_bump }}" == "true" ]]; then
              echo "should_version_bump=false" >> $GITHUB_OUTPUT
            else
              echo "should_version_bump=true" >> $GITHUB_OUTPUT
            fi
            echo "is_merged_pr=true" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          # Check if commit contains [skip ci] or [skip dart]
          if git log --format=%B -n 1 | grep -E "\[(skip ci|skip dart)\]" > /dev/null; then
            echo "should_regenerate=false" >> $GITHUB_OUTPUT
            echo "should_version_bump=false" >> $GITHUB_OUTPUT
            echo "is_merged_pr=false" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          # For pull requests, only regenerate, never version bump
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            if git diff --name-only HEAD~1 | grep -E "(openapi\.yaml|openapi-generator-configs/dart\.config\.json|templates/dart-template/)" > /dev/null; then
              echo "should_regenerate=true" >> $GITHUB_OUTPUT
            else
              echo "should_regenerate=false" >> $GITHUB_OUTPUT
            fi
            echo "should_version_bump=false" >> $GITHUB_OUTPUT
            echo "is_merged_pr=false" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          # For pushes to main, check if it's from a merged PR
          is_merged_pr="false"
          if [[ "${{ github.event_name }}" == "push" && "${{ github.ref }}" == "refs/heads/main" ]]; then
            # Check if this push came from a PR merge
            if git log --format=%B -n 1 | grep -E "Merge pull request|Merge branch.*into main" > /dev/null; then
              is_merged_pr="true"
            fi
          fi
          echo "is_merged_pr=$is_merged_pr" >> $GITHUB_OUTPUT
          
          # Check if regeneration triggers changed
          if git diff --name-only HEAD~1 | grep -E "(openapi\.yaml|openapi-generator-configs/dart\.config\.json|templates/dart-template/)" > /dev/null; then
            echo "should_regenerate=true" >> $GITHUB_OUTPUT
            if [[ "$is_merged_pr" == "true" ]]; then
              echo "should_version_bump=true" >> $GITHUB_OUTPUT
            else
              echo "should_version_bump=false" >> $GITHUB_OUTPUT
            fi
          elif git diff --name-only HEAD~1 | grep "clients/cardscan-dart/" > /dev/null; then
            echo "should_regenerate=false" >> $GITHUB_OUTPUT
            if [[ "$is_merged_pr" == "true" ]]; then
              echo "should_version_bump=true" >> $GITHUB_OUTPUT
            else
              echo "should_version_bump=false" >> $GITHUB_OUTPUT
            fi
          else
            echo "should_regenerate=false" >> $GITHUB_OUTPUT
            echo "should_version_bump=false" >> $GITHUB_OUTPUT
          fi

  regenerate:
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.should_regenerate == 'true'
    steps:
      - uses: actions/checkout@v3
        with:
          ssh-key: ${{ secrets.SSH_DEPLOY_KEY }}
      - name: Generate Dart Client
        uses: openapi-generators/openapitools-generator-action@v1
        with:
          generator: dart-dio
          openapi-file: openapi.yaml
          config-file: openapi-generator-configs/dart.config.json
          template-dir: templates/dart-template
          command-args: -o clients/cardscan-dart
          generator-tag: v7.13.0
      - name: Commit changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add clients/cardscan-dart/
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "chore: regenerate Dart client"
            git push
          fi

  version-bump:
    runs-on: ubuntu-latest
    needs: [detect-changes, regenerate]
    if: always() && needs.detect-changes.outputs.should_version_bump == 'true' && needs.detect-changes.outputs.is_merged_pr == 'true' && (needs.regenerate.result == 'success' || needs.regenerate.result == 'skipped')
    steps:
      - uses: actions/checkout@v3
        with:
          ssh-key: ${{ secrets.SSH_DEPLOY_KEY }}
          ref: main
      - name: Pull latest changes
        run: git pull origin main
      - uses: TriPSs/conventional-changelog-action@v3
        id: version
        with:
          github-token: ""
          version-file: clients/cardscan-dart/pubspec.yaml
          version-path: version
          git-message: "chore(release): bump dart client to {version}"
          tag-prefix: dart-v
          output-file: false
          skip-on-empty: false
      - name: Trigger Dart publish
        if: steps.version.outputs.skipped == 'false'
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          event-type: publish-dart