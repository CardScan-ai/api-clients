# coding: utf-8

"""
    CardScan API

    The official documentation for the CardScan API.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from cardscan_client.models.eligibility_api_response import EligibilityApiResponse  # noqa: E501

class TestEligibilityApiResponse(unittest.TestCase):
    """EligibilityApiResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> EligibilityApiResponse:
        """Test EligibilityApiResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `EligibilityApiResponse`
        """
        model = EligibilityApiResponse()  # noqa: E501
        if include_optional:
            return EligibilityApiResponse(
                eligibility_id = '',
                state = 'completed',
                card_id = '',
                eligibility_request = cardscan_client.models.eligibility_api_response_eligibility_request.EligibilityApiResponse_eligibility_request(
                    control_number = '', 
                    trading_partner_service_id = '', 
                    provider = cardscan_client.models.provider_dto.ProviderDto(
                        first_name = '0', 
                        last_name = '0', 
                        npi = '0', ), 
                    subscriber = cardscan_client.models.subscriber_dto.SubscriberDto(
                        first_name = '0', 
                        last_name = '0', 
                        date_of_birth = '04807288', ), ),
                eligibility_response = { },
                eligibility_summarized_response = { },
                error = cardscan_client.models.eligibility_api_response_error.EligibilityApiResponse_error(
                    type = '', 
                    code = '', 
                    message = '', ),
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                update_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
            )
        else:
            return EligibilityApiResponse(
                eligibility_id = '',
                state = 'completed',
                card_id = '',
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                update_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
        )
        """

    def testEligibilityApiResponse(self):
        """Test EligibilityApiResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
