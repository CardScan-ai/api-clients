# coding: utf-8

"""
    CardScan API

    The official documentation for the CardScan API.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from cardscan_client.models.card_api_response import CardApiResponse  # noqa: E501

class TestCardApiResponse(unittest.TestCase):
    """CardApiResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CardApiResponse:
        """Test CardApiResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CardApiResponse`
        """
        model = CardApiResponse()  # noqa: E501
        if include_optional:
            return CardApiResponse(
                card_id = '',
                state = 'pending',
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                error = cardscan_client.models.api_error_response.ApiErrorResponse(
                    message = '', 
                    type = '', 
                    code = 1.337, ),
                images = cardscan_client.models.card_api_response_images.CardApiResponse_images(
                    front = cardscan_client.models.card_api_response_images_front.CardApiResponse_images_front(
                        url = '', ), 
                    back = cardscan_client.models.card_api_response_images_back.CardApiResponse_images_back(
                        url = '', ), ),
                deleted = True,
                details = cardscan_client.models.card_api_response_details.CardApiResponse_details(
                    group_number = cardscan_client.models.match_score.MatchScore(
                        value = '', 
                        scores = [
                            ''
                            ], ), 
                    member_number = cardscan_client.models.match_score.MatchScore(
                        value = '', ), 
                    payer_name = , 
                    rx_bin = , 
                    rx_pcn = , 
                    member_name = , 
                    dependent_names = [
                        
                        ], 
                    plan_name = , 
                    plan_id = , 
                    card_specific_id = , )
            )
        else:
            return CardApiResponse(
                card_id = '',
                state = 'pending',
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                deleted = True,
        )
        """

    def testCardApiResponse(self):
        """Test CardApiResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
