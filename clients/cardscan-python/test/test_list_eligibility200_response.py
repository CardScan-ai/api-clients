# coding: utf-8

"""
    CardScan API

    The official documentation for the CardScan API.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from cardscan_client.models.list_eligibility200_response import ListEligibility200Response  # noqa: E501

class TestListEligibility200Response(unittest.TestCase):
    """ListEligibility200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListEligibility200Response:
        """Test ListEligibility200Response
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListEligibility200Response`
        """
        model = ListEligibility200Response()  # noqa: E501
        if include_optional:
            return ListEligibility200Response(
                eligibility_requests = [
                    cardscan_client.models.eligibility_api_response.EligibilityApiResponse(
                        eligibility_id = '', 
                        state = 'completed', 
                        card_id = '', 
                        eligibility_request = cardscan_client.models.eligibility_api_response_eligibility_request.EligibilityApiResponse_eligibility_request(
                            control_number = '', 
                            trading_partner_service_id = '', 
                            provider = cardscan_client.models.provider_dto.ProviderDto(
                                first_name = '0', 
                                last_name = '0', 
                                npi = '0', ), 
                            subscriber = cardscan_client.models.subscriber_dto.SubscriberDto(
                                first_name = '0', 
                                last_name = '0', 
                                date_of_birth = '04807288', ), ), 
                        eligibility_response = { }, 
                        eligibility_summarized_response = { }, 
                        error = cardscan_client.models.eligibility_api_response_error.EligibilityApiResponse_error(
                            type = '', 
                            code = '', 
                            message = '', ), 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        update_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ],
                response_metadata = cardscan_client.models.response_metadata.ResponseMetadata(
                    cursor = '', 
                    limit = 56, 
                    total = 56, )
            )
        else:
            return ListEligibility200Response(
                eligibility_requests = [
                    cardscan_client.models.eligibility_api_response.EligibilityApiResponse(
                        eligibility_id = '', 
                        state = 'completed', 
                        card_id = '', 
                        eligibility_request = cardscan_client.models.eligibility_api_response_eligibility_request.EligibilityApiResponse_eligibility_request(
                            control_number = '', 
                            trading_partner_service_id = '', 
                            provider = cardscan_client.models.provider_dto.ProviderDto(
                                first_name = '0', 
                                last_name = '0', 
                                npi = '0', ), 
                            subscriber = cardscan_client.models.subscriber_dto.SubscriberDto(
                                first_name = '0', 
                                last_name = '0', 
                                date_of_birth = '04807288', ), ), 
                        eligibility_response = { }, 
                        eligibility_summarized_response = { }, 
                        error = cardscan_client.models.eligibility_api_response_error.EligibilityApiResponse_error(
                            type = '', 
                            code = '', 
                            message = '', ), 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        update_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ],
                response_metadata = cardscan_client.models.response_metadata.ResponseMetadata(
                    cursor = '', 
                    limit = 56, 
                    total = 56, ),
        )
        """

    def testListEligibility200Response(self):
        """Test ListEligibility200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
