/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package ai.cardscan.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import ai.cardscan.client.models.ScanMetadata
import ai.cardscan.client.models.ScanMetadataCameraCapabilities
import ai.cardscan.client.models.ScanMetadataCaptureCanvas
import ai.cardscan.client.models.ScanMetadataCaptureScore
import ai.cardscan.client.models.ScanMetadataGuides
import ai.cardscan.client.models.ScanMetadataVideoBackground
import ai.cardscan.client.models.ScanMetadataVideoTrack
import ai.cardscan.client.models.ScanMetadataWindowInner

class ScanMetadataTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of ScanMetadata
        //val modelInstance = ScanMetadata()

        // to test the property `captureType` - The type of capture (automatic or manual)
        should("test captureType") {
            // uncomment below to test the property
            //modelInstance.captureType shouldBe ("TODO")
        }

        // to test the property `guides`
        should("test guides") {
            // uncomment below to test the property
            //modelInstance.guides shouldBe ("TODO")
        }

        // to test the property `captureCanvas`
        should("test captureCanvas") {
            // uncomment below to test the property
            //modelInstance.captureCanvas shouldBe ("TODO")
        }

        // to test the property `videoBackground`
        should("test videoBackground") {
            // uncomment below to test the property
            //modelInstance.videoBackground shouldBe ("TODO")
        }

        // to test the property `windowInner`
        should("test windowInner") {
            // uncomment below to test the property
            //modelInstance.windowInner shouldBe ("TODO")
        }

        // to test the property `mlThreshold` - Threshold for machine learning
        should("test mlThreshold") {
            // uncomment below to test the property
            //modelInstance.mlThreshold shouldBe ("TODO")
        }

        // to test the property `laplacianThreshold` - Threshold for Laplacian edge detection
        should("test laplacianThreshold") {
            // uncomment below to test the property
            //modelInstance.laplacianThreshold shouldBe ("TODO")
        }

        // to test the property `packageName` - Name of the package
        should("test packageName") {
            // uncomment below to test the property
            //modelInstance.packageName shouldBe ("TODO")
        }

        // to test the property `packageVersion` - Version of the package
        should("test packageVersion") {
            // uncomment below to test the property
            //modelInstance.packageVersion shouldBe ("TODO")
        }

        // to test the property `videoTrack`
        should("test videoTrack") {
            // uncomment below to test the property
            //modelInstance.videoTrack shouldBe ("TODO")
        }

        // to test the property `cameraCapabilities`
        should("test cameraCapabilities") {
            // uncomment below to test the property
            //modelInstance.cameraCapabilities shouldBe ("TODO")
        }

        // to test the property `captureScore`
        should("test captureScore") {
            // uncomment below to test the property
            //modelInstance.captureScore shouldBe ("TODO")
        }

    }
}
