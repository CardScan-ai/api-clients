//
// EligibilityApiResponseEligibilityRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** The eligibility request. */
public struct EligibilityApiResponseEligibilityRequest: Codable, JSONEncodable, Hashable {

    /** The control number of the claim. */
    public var controlNumber: String?
    /** The ID of the trading partner service. */
    public var tradingPartnerServiceId: String?
    public var provider: ProviderDto?
    public var subscriber: EligibilityApiResponseEligibilityRequestSubscriber?

    public init(controlNumber: String? = nil, tradingPartnerServiceId: String? = nil, provider: ProviderDto? = nil, subscriber: EligibilityApiResponseEligibilityRequestSubscriber? = nil) {
        self.controlNumber = controlNumber
        self.tradingPartnerServiceId = tradingPartnerServiceId
        self.provider = provider
        self.subscriber = subscriber
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case controlNumber
        case tradingPartnerServiceId
        case provider
        case subscriber
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(controlNumber, forKey: .controlNumber)
        try container.encodeIfPresent(tradingPartnerServiceId, forKey: .tradingPartnerServiceId)
        try container.encodeIfPresent(provider, forKey: .provider)
        try container.encodeIfPresent(subscriber, forKey: .subscriber)
    }
}

