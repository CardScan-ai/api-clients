//
// WebsocketError.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct WebsocketError: Codable, JSONEncodable, Hashable {

    /** A message describing the error. */
    public var message: String
    /** The type of error. */
    public var type: String
    /** The error code. */
    public var code: String
    /** The internal error message. */
    public var internalError: String?
    /** The type of the error (deprecated) */
    @available(*, deprecated, message: "This property is deprecated.")
    public var error: String?

    public init(message: String, type: String, code: String, internalError: String? = nil, error: String? = nil) {
        self.message = message
        self.type = type
        self.code = code
        self.internalError = internalError
        self.error = error
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case message
        case type
        case code
        case internalError = "internal_error"
        case error
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(message, forKey: .message)
        try container.encode(type, forKey: .type)
        try container.encode(code, forKey: .code)
        try container.encodeIfPresent(internalError, forKey: .internalError)
        try container.encodeIfPresent(error, forKey: .error)
    }
}

