//
// SubscriberDto.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct SubscriberDto: Codable, JSONEncodable, Hashable {

    public static let firstNameRule = StringRule(minLength: 1, maxLength: 35, pattern: nil)
    public static let lastNameRule = StringRule(minLength: 1, maxLength: 60, pattern: nil)
    /** The subscriber's first name. Required and must contain 1-35 alphanumeric characters.  Use this for accurate identification of the subscriber.  */
    public var firstName: String
    /** The subscriber's last name. Required and must contain 1-60 alphanumeric characters.  This field is critical for matching subscriber records.  */
    public var lastName: String
    /** The subscriber's date of birth, formatted as YYYYMMDD.  Required for validation and eligibility checks.  Example: '19800101'  */
    public var dateOfBirth: String

    public init(firstName: String, lastName: String, dateOfBirth: String) {
        self.firstName = firstName
        self.lastName = lastName
        self.dateOfBirth = dateOfBirth
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case firstName = "first_name"
        case lastName = "last_name"
        case dateOfBirth = "date_of_birth"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(firstName, forKey: .firstName)
        try container.encode(lastName, forKey: .lastName)
        try container.encode(dateOfBirth, forKey: .dateOfBirth)
    }
}

